# -*- coding: utf-8 -*-
"""StreamlitPlay.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15bJ7YAv4NugDdbDA809QfV5nLvGZiQ6M
"""

!pip -q install streamlit
!pip -q install pyngrok
!pip -q install awscli
!pip -q install flask boto3

# Commented out IPython magic to ensure Python compatibility.
# %%writefile hurricane_app_temp.py
# import streamlit as st
# import time
# import tarfile
# import boto3
# import awscli
# 
# import numpy as np
# 
# import netCDF4 as nc
# import pandas as pd
# import matplotlib.pyplot as plt
# import matplotlib
# import seaborn as sns
# import os
# 
# import tensorflow as tf
# 
# MAX_PIXEL = 350
# MAX_WIND = 180
# 
# st.title('ðŸŒ€ Tropical Cyclone Image Predictor ðŸŒ€')
# st.write('Input an Infrared Satellite Image of a Hurricane to Estimate its Windspeed')
# 
# uploaded_file = st.file_uploader('Upload a 1 x 301 X 301 x 1 centered HURSAT IRWIN image (2D Numpy array) in CSV format.')
# 
# if uploaded_file is not None:
# 
#   uploaded_df = pd.read_csv(uploaded_file, index_col = 0)
#   norm_df = uploaded_df / MAX_PIXEL
#   norm_image = np.array(norm_df)
#   norm_image.resize(1, 301, 301, 1)
# 
#   model = tf.keras.models.load_model('/content/hurricane_imagery_model.h5', compile = True)
#   prediction = model.predict([norm_image])
#   st.write('')
#   st.header('Estimated Windspeed is ' + str(int(prediction[0][0] * MAX_WIND)) +  ' knots.')
# 
#   fig = plt.figure(edgecolor = 'black')
#   g1 = sns.heatmap(uploaded_df, cbar = False, cmap="YlGnBu")
#   g1.set(yticklabels = [])
#   g1.set(xticklabels = [])
#   g1.tick_params(left = False, bottom = False)
#   st.pyplot(fig)
#

#@title This last cell would keep the app running. If stoped, the app would be disconnected.
from pyngrok import ngrok
public_url = ngrok.connect(port='80')
print('Link to web app:')
print (public_url)
!streamlit run --server.port 80 hurricane_app_temp.py >/dev/null